# =========================================
# == Application Generic
# =========================================
#List of origins allowed to do crossdomain calls
server.allowedOrigins=http://localhost:3000
#Port where app will be listening
server.port=7011
server.debugMode = true
# =========================================
# == Crypto
# =========================================
crypto.secret=secret
crypto.expireSecs=900

# =========================================
# == Logging
# =========================================
logging.level.org.springframework=DEBUG
logging.level.com.bz=DEBUG
#output to a temp_folder/file
logging.file=${java.io.tmpdir}/application.log
 # Logging pattern for the console
logging.pattern.console=%clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(%-5p) %clr(%logger{0}){blue} %clr(%m){faint}%n
 # Logging pattern for file
logging.pattern.file= %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%

# ========================================
# == Database Config
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.host=localhost
spring.datasource.port=3306
spring.datasource.dbname=wutz_db
spring.datasource.url=jdbc:mysql://localhost:3306/wutz_db
spring.datasource.username=root
spring.datasource.password=jaururo2009
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.generate-ddl=true
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update